# Generated by Django 5.2.7 on 2025-10-08 13:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('discount_type', models.CharField(choices=[('percentage', 'Porcentagem'), ('fixed', 'Valor Fixo')], max_length=10, verbose_name='Tipo de Desconto')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor do Desconto')),
                ('min_purchase_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Valor Mínimo')),
                ('max_uses', models.IntegerField(default=1, verbose_name='Máximo de Usos')),
                ('current_uses', models.IntegerField(default=0, verbose_name='Usos Atuais')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('valid_from', models.DateTimeField(verbose_name='Válido de')),
                ('valid_until', models.DateTimeField(verbose_name='Válido até')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Cupom',
                'verbose_name_plural': 'Cupons',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Evento')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('date', models.DateTimeField(verbose_name='Data e Hora')),
                ('location', models.CharField(max_length=255, verbose_name='Local')),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/', verbose_name='Imagem')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EventAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.IntegerField(default=0, verbose_name='Total de Visualizações')),
                ('total_purchases', models.IntegerField(default=0, verbose_name='Total de Compras')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Receita Total')),
                ('conversion_rate', models.FloatField(default=0, verbose_name='Taxa de Conversão')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='events.event')),
            ],
            options={
                'verbose_name': 'Analytics do Evento',
                'verbose_name_plural': 'Analytics dos Eventos',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço Total')),
                ('purchase_date', models.DateTimeField(auto_now_add=True, verbose_name='Data da Compra')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('processing', 'Processando'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status')),
                ('payment_method', models.CharField(choices=[('pix', 'PIX'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito')], default='pix', max_length=20, verbose_name='Método de Pagamento')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID da Transação')),
                ('mercado_pago_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID Mercado Pago')),
                ('payment_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status do Pagamento')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Data do Pagamento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Compra',
                'verbose_name_plural': 'Compras',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mercado_pago_id', models.CharField(max_length=100, unique=True, verbose_name='ID Mercado Pago')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado'), ('cancelled', 'Cancelado'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status')),
                ('payment_method', models.CharField(choices=[('pix', 'PIX'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito')], max_length=20, verbose_name='Método de Pagamento')),
                ('payment_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status do Pagamento')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('currency', models.CharField(default='BRL', max_length=3, verbose_name='Moeda')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('payer_email', models.EmailField(max_length=254, verbose_name='Email do Pagador')),
                ('payer_name', models.CharField(max_length=255, verbose_name='Nome do Pagador')),
                ('payer_document', models.CharField(max_length=20, verbose_name='Documento do Pagador')),
                ('pix_qr_code', models.TextField(blank=True, null=True, verbose_name='QR Code PIX')),
                ('pix_qr_code_base64', models.TextField(blank=True, null=True, verbose_name='QR Code PIX Base64')),
                ('card_token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token do Cartão')),
                ('installments', models.IntegerField(default=1, verbose_name='Parcelas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Pago em')),
                ('mp_response', models.JSONField(blank=True, null=True, verbose_name='Resposta MP')),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='events.purchase', verbose_name='Compra')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Preço')),
                ('type', models.CharField(choices=[('VIP', 'VIP'), ('Standard', 'Padrão'), ('Student', 'Estudante'), ('Early Bird', 'Early Bird')], max_length=255, verbose_name='Tipo')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantidade Disponível')),
                ('max_per_person', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Máximo por Pessoa')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='events.event', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Ingresso',
                'verbose_name_plural': 'Ingressos',
                'unique_together': {('event', 'type')},
            },
        ),
        migrations.AddField(
            model_name='purchase',
            name='ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.ticket', verbose_name='Ingresso'),
        ),
        migrations.CreateModel(
            name='TicketValidation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.CharField(max_length=255, unique=True, verbose_name='Código QR')),
                ('qr_code_image', models.ImageField(blank=True, null=True, upload_to='qr_codes/', verbose_name='Imagem QR')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validado')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validado em')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='validation', to='events.purchase')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Validado por')),
            ],
            options={
                'verbose_name': 'Validação de Ingresso',
                'verbose_name_plural': 'Validações de Ingressos',
            },
        ),
    ]
